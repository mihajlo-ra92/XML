// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.22.2
// source: booking_service.proto

package booking

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	BookingService_Get_FullMethodName                             = "/booking.BookingService/Get"
	BookingService_GetAll_FullMethodName                          = "/booking.BookingService/GetAll"
	BookingService_CreateBooking_FullMethodName                   = "/booking.BookingService/CreateBooking"
	BookingService_GuestReserveAccommodation_FullMethodName       = "/booking.BookingService/GuestReserveAccommodation"
	BookingService_BookingAccept_FullMethodName                   = "/booking.BookingService/BookingAccept"
	BookingService_BookingDeny_FullMethodName                     = "/booking.BookingService/BookingDeny"
	BookingService_GetByAccomodationIdandDataRange_FullMethodName = "/booking.BookingService/GetByAccomodationIdandDataRange"
)

// BookingServiceClient is the client API for BookingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BookingServiceClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	GetAll(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllResponse, error)
	CreateBooking(ctx context.Context, in *CreateBookingRequest, opts ...grpc.CallOption) (*CreateBookingResponse, error)
	GuestReserveAccommodation(ctx context.Context, in *GuestReserveAccommodationRequest, opts ...grpc.CallOption) (*GuestReserveAccommodationResponse, error)
	BookingAccept(ctx context.Context, in *BookingAcceptRequest, opts ...grpc.CallOption) (*BookingAcceptResponse, error)
	BookingDeny(ctx context.Context, in *BookingDenyRequest, opts ...grpc.CallOption) (*BookingDenyResponse, error)
	GetByAccomodationIdandDataRange(ctx context.Context, in *GetByAccomodationIdandDataRangeRequest, opts ...grpc.CallOption) (*GetByAccomodationIdandDataRangeResponse, error)
}

type bookingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBookingServiceClient(cc grpc.ClientConnInterface) BookingServiceClient {
	return &bookingServiceClient{cc}
}

func (c *bookingServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, BookingService_Get_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingServiceClient) GetAll(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllResponse, error) {
	out := new(GetAllResponse)
	err := c.cc.Invoke(ctx, BookingService_GetAll_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingServiceClient) CreateBooking(ctx context.Context, in *CreateBookingRequest, opts ...grpc.CallOption) (*CreateBookingResponse, error) {
	out := new(CreateBookingResponse)
	err := c.cc.Invoke(ctx, BookingService_CreateBooking_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingServiceClient) GuestReserveAccommodation(ctx context.Context, in *GuestReserveAccommodationRequest, opts ...grpc.CallOption) (*GuestReserveAccommodationResponse, error) {
	out := new(GuestReserveAccommodationResponse)
	err := c.cc.Invoke(ctx, BookingService_GuestReserveAccommodation_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingServiceClient) BookingAccept(ctx context.Context, in *BookingAcceptRequest, opts ...grpc.CallOption) (*BookingAcceptResponse, error) {
	out := new(BookingAcceptResponse)
	err := c.cc.Invoke(ctx, BookingService_BookingAccept_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingServiceClient) BookingDeny(ctx context.Context, in *BookingDenyRequest, opts ...grpc.CallOption) (*BookingDenyResponse, error) {
	out := new(BookingDenyResponse)
	err := c.cc.Invoke(ctx, BookingService_BookingDeny_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingServiceClient) GetByAccomodationIdandDataRange(ctx context.Context, in *GetByAccomodationIdandDataRangeRequest, opts ...grpc.CallOption) (*GetByAccomodationIdandDataRangeResponse, error) {
	out := new(GetByAccomodationIdandDataRangeResponse)
	err := c.cc.Invoke(ctx, BookingService_GetByAccomodationIdandDataRange_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookingServiceServer is the server API for BookingService service.
// All implementations must embed UnimplementedBookingServiceServer
// for forward compatibility
type BookingServiceServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
	GetAll(context.Context, *GetAllRequest) (*GetAllResponse, error)
	CreateBooking(context.Context, *CreateBookingRequest) (*CreateBookingResponse, error)
	GuestReserveAccommodation(context.Context, *GuestReserveAccommodationRequest) (*GuestReserveAccommodationResponse, error)
	BookingAccept(context.Context, *BookingAcceptRequest) (*BookingAcceptResponse, error)
	BookingDeny(context.Context, *BookingDenyRequest) (*BookingDenyResponse, error)
	GetByAccomodationIdandDataRange(context.Context, *GetByAccomodationIdandDataRangeRequest) (*GetByAccomodationIdandDataRangeResponse, error)
	mustEmbedUnimplementedBookingServiceServer()
}

// UnimplementedBookingServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBookingServiceServer struct {
}

func (UnimplementedBookingServiceServer) Get(context.Context, *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedBookingServiceServer) GetAll(context.Context, *GetAllRequest) (*GetAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (UnimplementedBookingServiceServer) CreateBooking(context.Context, *CreateBookingRequest) (*CreateBookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBooking not implemented")
}
func (UnimplementedBookingServiceServer) GuestReserveAccommodation(context.Context, *GuestReserveAccommodationRequest) (*GuestReserveAccommodationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuestReserveAccommodation not implemented")
}
func (UnimplementedBookingServiceServer) BookingAccept(context.Context, *BookingAcceptRequest) (*BookingAcceptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BookingAccept not implemented")
}
func (UnimplementedBookingServiceServer) BookingDeny(context.Context, *BookingDenyRequest) (*BookingDenyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BookingDeny not implemented")
}
func (UnimplementedBookingServiceServer) GetByAccomodationIdandDataRange(context.Context, *GetByAccomodationIdandDataRangeRequest) (*GetByAccomodationIdandDataRangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByAccomodationIdandDataRange not implemented")
}
func (UnimplementedBookingServiceServer) mustEmbedUnimplementedBookingServiceServer() {}

// UnsafeBookingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BookingServiceServer will
// result in compilation errors.
type UnsafeBookingServiceServer interface {
	mustEmbedUnimplementedBookingServiceServer()
}

func RegisterBookingServiceServer(s grpc.ServiceRegistrar, srv BookingServiceServer) {
	s.RegisterService(&BookingService_ServiceDesc, srv)
}

func _BookingService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BookingService_Get_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookingService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BookingService_GetAll_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).GetAll(ctx, req.(*GetAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookingService_CreateBooking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBookingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).CreateBooking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BookingService_CreateBooking_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).CreateBooking(ctx, req.(*CreateBookingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookingService_GuestReserveAccommodation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GuestReserveAccommodationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).GuestReserveAccommodation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BookingService_GuestReserveAccommodation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).GuestReserveAccommodation(ctx, req.(*GuestReserveAccommodationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookingService_BookingAccept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookingAcceptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).BookingAccept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BookingService_BookingAccept_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).BookingAccept(ctx, req.(*BookingAcceptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookingService_BookingDeny_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookingDenyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).BookingDeny(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BookingService_BookingDeny_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).BookingDeny(ctx, req.(*BookingDenyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookingService_GetByAccomodationIdandDataRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByAccomodationIdandDataRangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).GetByAccomodationIdandDataRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BookingService_GetByAccomodationIdandDataRange_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).GetByAccomodationIdandDataRange(ctx, req.(*GetByAccomodationIdandDataRangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BookingService_ServiceDesc is the grpc.ServiceDesc for BookingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BookingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "booking.BookingService",
	HandlerType: (*BookingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _BookingService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _BookingService_GetAll_Handler,
		},
		{
			MethodName: "CreateBooking",
			Handler:    _BookingService_CreateBooking_Handler,
		},
		{
			MethodName: "GuestReserveAccommodation",
			Handler:    _BookingService_GuestReserveAccommodation_Handler,
		},
		{
			MethodName: "BookingAccept",
			Handler:    _BookingService_BookingAccept_Handler,
		},
		{
			MethodName: "BookingDeny",
			Handler:    _BookingService_BookingDeny_Handler,
		},
		{
			MethodName: "GetByAccomodationIdandDataRange",
			Handler:    _BookingService_GetByAccomodationIdandDataRange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "booking_service.proto",
}
