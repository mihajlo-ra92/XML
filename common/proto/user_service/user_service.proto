syntax = "proto3";

option go_package = "github.com/mihajlo-ra92/XML/common/user";

package user;

import "google/api/annotations.proto";

service UserService{
    rpc Get(GetRequest) returns(GetResponse) {
        option (google.api.http) = {
                get: "/user/{id}"
        };
    }
    rpc GetAll(GetAllRequest) returns(GetAllResponse){
        option (google.api.http) = {
                get: "/user"
        };
    }
    rpc CreateUser(CreateUserRequest) returns(CreateUserResponse) {
        option (google.api.http) = {
            post: "/user"
            body: "user"
        };
    }
    rpc DeleteUser(DeleteUserRequest) returns(DeleteUserResponse){}
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse){}
    rpc GetByLoginData(GetByLoginDataRequest) returns(GetByLoginDataResponse){}
    rpc CheckIsOutstandingById(CheckIsOutstandingByIdRequest) returns(CheckIsOutstandingByIdResponse){
        option (google.api.http) = {
            post: "/user/outstanding"
            body: "*"
        };
    }
}

message CheckIsOutstandingByIdRequest{
    string id = 1;
}
message CheckIsOutstandingByIdResponse{
    bool is_outstanding = 1;
}
message DeleteUserRequest{
    string id = 1;
}
message DeleteUserResponse{
    User user = 1; 
}
message UpdateUserRequest {
    User user = 1;
}
message UpdateUserResponse{
    User user = 1;
}
message CreateUserRequest {
    NewUser user = 1;
}

message GetByLoginDataRequest {
    Login login = 1;
}

message CreateUserResponse {
    User user = 1;
}

message GetRequest {
    string id = 1;
}

message GetResponse {
    User user = 1;
}

message GetAllRequest{
}

message GetAllResponse{
    repeated User users = 1;
}

message GetByLoginDataResponse{
    User user = 1;
}

message User {
    string id = 1;
    enum UserType {
        Guest = 0;
        Host = 1;
        Admin = 2;
    }
    UserType userType = 2;
    string username = 3;
    string password = 4;
    string email = 5;
    string FirstName = 6;
    string LastName = 7;
    string Address = 8;
    string outstanding = 9;
}

message NewUser {
    enum UserType {
        Guest = 0;
        Host = 1;
        Admin = 2;
    }
    UserType userType = 2;
    string username = 3;
    string password = 4;
    string email = 5;
    string FirstName = 6;
    string LastName = 7;
    string Address = 8;
}

message Login {
    string username = 1;
    string password = 2;
}
